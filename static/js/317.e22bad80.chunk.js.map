{"version":3,"file":"static/js/317.e22bad80.chunk.js","mappings":"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","sources":["components/CarFilter/CarFilter.styled.js","components/CarFilter/CarFilter.jsx","components/CatalogList/CatalogList.styled.js","components/CatalogList/CatalogList.jsx","components/CatalogMarking/CatalogMarking.styled.js","components/CatalogMarking/CatalogMarking.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\n\n\nexport const CarsFilterBlock = styled.div`\ndisplay: flex;\nalign-items: flex-end;\ngap: 18px;\n\nmax-width: 859px;\nheight: 74px;\nfont-weight: 500;\nline-height: 1.28;\n\nmargin-bottom: 50px;\n`;\n\nexport const CarsBrendBlock = styled.div`\nwidth: 224px;\nheight: 74px;\n\n`;\n\nexport const CarsFilterLabelBlock = styled.label`\ndisplay: block;\nmargin-bottom: 8px;\nfont-weight: 500;\nline-height: 1.29;\ncolor: ${color.secondaryGray};\n\n\n`;\n\n// export const CarsFilterBlockSelect = styled.option`\n// color: #121417;\n\n// font-size: 18px;\n// font-weight: 500;\n// line-height: 20px; /* 111.111% */\n// `;\n\nexport const SelectStyledBrendBlock = styled.select`\n  height: 48px;\n  display: flex;\n  padding: 14px 89px 14px 18px;\n\n  border-radius: 14px;\n  background: ${color.lightGray};\n  border: none;\n  width: 100%; \n  outline: none;   \n\n  \n`;\n\nexport const CarsPriceBlock = styled.div`\n  width: 125px;\n  height: 74px;\n`;\n\nexport const SelectStyledPriceBlock = styled.select`\n  height: 48px;\n  display: flex;\n  padding: 14px  18px;\n\n  border-radius: 14px;\n  background: ${color.lightGray};\n  border: none;\n  width: 100%; \n  outline: none; \n`;\n\nexport const CarsMileageBlock = styled.div`\nwidth: 320px;\nheight: 74px;\n\n\n`;\n\nexport const CarsMileageBlockFromTo = styled.div`\ndisplay: flex;\n`;\n\nexport const InputStyledMileageFrom = styled.input`\nwidth: 160px;\nheight: 48px;\npadding: 14px 93px 14px 24px;\n\nborder-radius: 14px 0px 0px 14px;\nborder: none;\nborder-right: 1px solid rgba(138, 138, 137, 0.20);\nbackground: ${color.lightGray};\noutline: none;\n\n`;\n\nexport const InputStyledMileageTo = styled.input`\nwidth: 160px;\nheight: 48px;\npadding: 14px 115px 14px 24px;\n\nborder-radius: 0px 14px 14px 0px;\nborder: none;\nbackground: ${color.lightGray};\noutline: none;\n`;\n\nexport const CarsSarchBtn = styled.button`\nwidth: 136px;\nheight: 48px;\nfont-size: 14px;\nfont-weight: 600;\nline-height: 1.43;\npadding: 14px 44px;\nalign-items: center;\n\nborder-radius: 12px;\ncolor: ${color.whitePrimary};\nbackground: ${color.lightBlue};\n`;\n\n\n\n\nexport const CustomDropdown = styled.div`\n  position: relative;\n  width: 224px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.gryeTextColorBrands};\n  /* overflow-y: auto; // Добавлено свойство overflow-y\n  max-height: 200px;  */\n`;\n\n\nexport const DropdownButton = styled.button`\n  width: 100%;\n  height: 48px;\n  padding: 14px 89px 14px 18px;\n  border-radius: 14px;\n  background: ${color.lightGray};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  position: relative;\n\n  /* color: red; */\n\n\n\n\n  &::after {\n    content: '\\25BC';\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    color: red;\n  }\n`;\n\n\nexport const DropdownList = styled.ul`\n  overflow-y: auto; \n  height: 272px;\n  padding: 14px 8px 14px 18px;\n\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border-radius: 14px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n  z-index: 5;\n  background: ${color.whitePrimary};\n\n  border: 1px solid rgba(18, 20, 23, 0.05);\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n\n  &.isOpen {\n    display: block;\n  }\n  \n  \n  scrollbar-width: 8px;\n  scrollbar-color: ${color.greyRgba} ${color.lightGray};\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 130px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n\n    background-color: ${color.greyRgba};\n    border-radius: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${color.lightGray};\n    border-radius: 10px;\n  }\n`;\n\nexport const DropdownItem = styled.li`\n  cursor: pointer;\n  \n  &:not(:last-child) {\n    margin-bottom: 8px; \n  }\n\n  &:hover {\n    background-color: #f2f2f2; // ховер\n  }\n`;","import { useState } from \"react\";\nimport { CarsBrendBlock, CarsFilterBlock, CarsFilterLabelBlock, CarsMileageBlock, CarsMileageBlockFromTo, CarsPriceBlock, CarsSarchBtn, CustomDropdown, DropdownButton, DropdownItem, DropdownList, InputStyledMileageFrom, InputStyledMileageTo, SelectStyledPriceBlock } from \"./CarFilter.styled\";\nimport {  useSelector } from \"react-redux\";\nimport { selectCarsCatalog } from \"redax/cars/selector\";\nimport { toast } from 'react-toastify';\n\nconst carBrands = [\n    \"Buick\", \"Volvo\", \"HUMMER\", \"Subaru\", \"Mitsubishi\", \"Nissan\", \"Lincoln\",\n    \"GMC\", \"Hyundai\", \"MINI\", \"Bentley\", \"Mercedes-Benz\", \"Aston Martin\",\n    \"Pontiac\", \"Lamborghini\", \"Audi\", \"BMW\", \"Chevrolet\", \"Chrysler\", \"Kia\", \"Land\"\n  ];\n\n  const rentalPrices = Array.from({ length: 50 }, (_, index) => (index+1) * 10);\n\nexport default function CarFilter({updateFilteredCars}) {\n    const carList = useSelector(selectCarsCatalog);\n\n    const [selectedBrand, setSelectedBrand] = useState('');\n    const [selectedPrice, setSelectedPrice] = useState('');\n    const [fromMileage, setFromMileage] = useState('');\n    const [toMileage, setToMileage] = useState('');\n\n\n    const [isOpen, setIsOpen] = useState(false);\n\n\n    const handleBrandChange = (brand) => {\n        setSelectedBrand(brand);\n        setIsOpen(false);\n      };\n\n    const handlePriceChange = (event) => {\n        console.log(event.target.value)\n        setSelectedPrice(event.target.value);\n    };\n\n    const handleFromMileageChange = (event) => {\n        setFromMileage(event.target.value.replace('From ', ''));\n    };\n    \n    const handleToMileageChange = (event) => {\n        setToMileage(event.target.value.replace('To ', ''));\n    };\n\n    const handleSearch = () => {\n        const findCars = carList.filter(item => item.make === selectedBrand)   \n        if (findCars.length === 0) {\n            toast.error('This type of car was not found, see below .');            \n        } \n        updateFilteredCars(findCars);          \n    };\n\n\n    \n    return (\n        <CarsFilterBlock>\n\n            {/* <CarsBrendBlock>\n                <CarsFilterLabelBlock htmlFor=\"carBrand\">Car brand</CarsFilterLabelBlock>\n                <div>\n                    <SelectStyledBrendBlock\n                        value={selectedBrand}\n                        onChange={handleBrandChange}\n                    >\n                        <option >Enter the text</option>\n                            {carBrands.map(brand => (\n                                <option key={brand} value={brand}>\n                                   {brand}\n                                </option>\n                            ))}\n                    </SelectStyledBrendBlock>\n                </div>\n            </CarsBrendBlock> */}\n\n<CustomDropdown>\n      <CarsBrendBlock>\n        <CarsFilterLabelBlock htmlFor=\"carBrand\">Car brand</CarsFilterLabelBlock>\n        <DropdownButton onClick={() => setIsOpen(!isOpen)}>\n          {selectedBrand || 'Enter the text'}\n        </DropdownButton>\n        <DropdownList className={isOpen ? 'isOpen' : ''}>\n          {carBrands.map((brand) => (\n            <DropdownItem key={brand} onClick={() => handleBrandChange(brand)}>\n              {brand}\n            </DropdownItem>\n          ))}\n        </DropdownList>\n      </CarsBrendBlock>\n    </CustomDropdown>\n       \n            <CarsPriceBlock>\n                <CarsFilterLabelBlock htmlFor=\"price\">Price/1 hour</CarsFilterLabelBlock>\n                <div>\n                    <SelectStyledPriceBlock\n                        value={selectedPrice}\n                        onChange={handlePriceChange}\n                    >\n                        <option >To $</option>\n                           {rentalPrices.map(price => (\n                                <option key={price} value={price}>\n                                    {price}\n                                </option>\n                            ))}\n                    </SelectStyledPriceBlock>\n                </div>\n            </CarsPriceBlock>\n\n            <CarsMileageBlock>\n                <CarsFilterLabelBlock htmlFor=\"fromMileage\">Car mileage / km</CarsFilterLabelBlock>\n                <CarsMileageBlockFromTo>\n                    <InputStyledMileageFrom\n                      type=\"text\"\n                      id=\"fromMileage\"\n                      value={`From ${fromMileage}`}\n                      onChange={handleFromMileageChange}\n                    />\n                    <InputStyledMileageTo\n                      type=\"text\"\n                      id=\"toMileage\"\n                      value={`To ${toMileage}`}\n                      onChange={handleToMileageChange}\n                    />\n                </CarsMileageBlockFromTo>\n            </CarsMileageBlock>      \n            <div>\n                <CarsSarchBtn onClick={handleSearch}>Search</CarsSarchBtn>\n            </div>        \n        </CarsFilterBlock>\n    );\n  }\n  ","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px; // Когда исчезнет кнопка, мардж пропадёт\n`;\n\nexport const CarBtnLoadMore = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration-line: underline;\n\n  width: 79px;\n  height: 24px;\n  color: ${color.lightBlue};\n  background: transparent;\n`;","import React, { useEffect, useState} from \"react\";\n\nimport { CarBtnLoadMore, CenteredContainer } from \"./CatalogList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCarById, fetchCars } from \"redax/cars/operation\";\nimport ModalWindow from \"components/ModalWindow/ModalWindow\";\nimport { toggleFavorite } from \"redax/cars/carsSlice\";\nimport UniversalCardBlock from \"components/UniversalCardBlock/UniversalCardBlock\";\nimport { selectCarsCatalog } from \"redax/cars/selector\";\n\nexport default function CatalogList({ filteredCars }) {\n  const [selectedCarId, setSelectedCarId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const carList = useSelector(selectCarsCatalog);\n  \n  useEffect(() => {\n    dispatch(fetchCars({ limit: currentPage*12}));\n  }, [dispatch, currentPage]);\n\n\n  useEffect(() => {\n    if (selectedCarId && !carList.find((car) => car.id === selectedCarId.id)) {\n      setSelectedCarId(null);\n    }\n  }, [selectedCarId, carList]);\n\n  const carsOnRender = filteredCars && filteredCars.length === 0 ? carList : filteredCars;\n \n  const handleLearnMoreClick = (id) => {\n    const findCar = carList.find(car => car.id === id)\n    dispatch(fetchCarById(id))\n    setSelectedCarId(findCar);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedCarId(null);\n  };\n\n  const handleHeartClick = (id) => {\n    dispatch(toggleFavorite(id));\n  };\n\n  const handleLoadMoreClick = () => { \n    setCurrentPage(prevPage => prevPage + 1);  \n  };\n\n  return (  \n    <div>\n      <UniversalCardBlock\n        data={carsOnRender}\n        onHeartClick={handleHeartClick}\n        onLearnMoreClick={handleLearnMoreClick}\n      /> \n        {carList.length >= currentPage * 12 && carsOnRender.length > 1 && (\n          <CenteredContainer>\n            <CarBtnLoadMore type=\"button\" onClick={handleLoadMoreClick}>Load more</CarBtnLoadMore>\n          </CenteredContainer>\n        )}\n      {selectedCarId  && <ModalWindow car={selectedCarId} onClose={handleCloseModal}/>}  \n     </div>     \n  );\n}\n\n\n\n","import styled from 'styled-components'\n\nexport const WrapperOfMainConteinerCarsBlock = styled.div`\ndisplay: flex;\nalign-items: center;\nflex-direction:column;\n`;\n\nexport const MainConteinerCarsBlock = styled.div`\n\ndisplay: flex;\nalign-items: center;\nflex-direction:column;\nmax-width: 1440px;\nheight: auto;\n\npadding: 50px 128px 128px;\n\n`;\n","import CarFilter from \"components/CarFilter/CarFilter\";\nimport CatalogList from \"components/CatalogList/CatalogList\";\nimport { MainConteinerCarsBlock, WrapperOfMainConteinerCarsBlock } from \"components/CatalogMarking/CatalogMarking.styled\";\n\nimport { useState } from \"react\";\n\nexport default function CatalogMarking() {\n  const [filteredCars, setFilteredCars] = useState([]);\n\n  const updateFilteredCars = (newFilteredCars) => {\n    setFilteredCars(newFilteredCars);      \n  };\n  return (      \n    <WrapperOfMainConteinerCarsBlock>\n      <MainConteinerCarsBlock>\n        <CarFilter updateFilteredCars={updateFilteredCars}/>\n        <CatalogList filteredCars={filteredCars}/>\n      </MainConteinerCarsBlock>\n    </WrapperOfMainConteinerCarsBlock>\n  );\n}\n  ","import CatalogMarking from \"components/CatalogMarking/CatalogMarking\";\n\nexport default function Catalog() {\n    return (\n       <CatalogMarking />\n    );\n  }\n  "],"names":["CarsFilterBlock","styled","_templateObject","_taggedTemplateLiteral","CarsBrendBlock","_templateObject2","CarsFilterLabelBlock","_templateObject3","color","CarsPriceBlock","_templateObject4","_templateObject5","SelectStyledPriceBlock","_templateObject6","CarsMileageBlock","_templateObject7","CarsMileageBlockFromTo","_templateObject8","InputStyledMileageFrom","_templateObject9","InputStyledMileageTo","_templateObject10","CarsSarchBtn","_templateObject11","CustomDropdown","_templateObject12","DropdownButton","_templateObject13","DropdownList","_templateObject14","_ref","isOpen","DropdownItem","_templateObject15","carBrands","rentalPrices","Array","from","length","_","index","CarFilter","updateFilteredCars","carList","useSelector","selectCarsCatalog","_useState","useState","_useState2","_slicedToArray","selectedBrand","setSelectedBrand","_useState3","_useState4","selectedPrice","setSelectedPrice","_useState5","_useState6","fromMileage","setFromMileage","_useState7","_useState8","toMileage","setToMileage","_useState9","_useState10","setIsOpen","_jsxs","children","_jsx","htmlFor","onClick","className","map","brand","handleBrandChange","value","onChange","event","console","log","target","price","type","id","concat","replace","findCars","filter","item","make","toast","CenteredContainer","CarBtnLoadMore","CatalogList","filteredCars","selectedCarId","setSelectedCarId","currentPage","setCurrentPage","dispatch","useDispatch","useEffect","fetchCars","limit","find","car","carsOnRender","UniversalCardBlock","data","onHeartClick","toggleFavorite","onLearnMoreClick","findCar","fetchCarById","prevPage","ModalWindow","onClose","WrapperOfMainConteinerCarsBlock","MainConteinerCarsBlock","CatalogMarking","setFilteredCars","newFilteredCars","Catalog"],"sourceRoot":""}